# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: NestJS-flashlight-server

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4
      - name: Display Node version
        run : echo node -v

      - name: Create .env file
        run: echo "${{ secrets.ENV_DEV }}" > .env

      - name: Create .env.stage file
        run: echo "${{ secrets.ENV_STAGE }}" > .env.stage
    
      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: devpio/flashlight-server
          tags: v1, latest
          registry: docker.io
          dockerfile: dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: EC2 deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_INSTANCE_ID }} # 인스턴스 IP
          username: ${{ secrets.EC2_USERNAME }} # 우분투 아이디
          key: ${{ secrets.EC2_PEM_KEY }} # ec2 instance pem key
          port: ${{ secrets.EC2_SSH_PORT }} # 접속포트
          script: |
            sudo docker login -u devpio -p ${{ secrets.DOCKER_PASSWORD }}

            CONTAINER_ID=$(sudo docker ps -q --filter "publish=80-8080")

            if [ ! -z "$CONTAINER_ID" ]; then
            sudo docker stop $CONTAINER_ID
            sudo docker rm $CONTAINER_ID
            fi
            
            sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/flashlight-server
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/flashlight-server
            docker run -d --name flashlight-ec2 -p 4000:4000 flashlight-server
        
